version: 2.1
jobs:
  lint-docs:
    docker:
      - image: cimg/ruby:2.7.8-node
    steps:
      - checkout
      - run:
          name: install markdownlint
          command: |
            sudo npm install -g markdownlint-cli@0.22.0
            markdownlint --version
      - run:
          name: lint .md files
          command: markdownlint --config .markdownlint.json .
  deploy-docs:
    docker:
      - image: cimg/python:3.13.5
    steps:
      - checkout
      - run:
          name: install mkdocs
          command: pip install mkdocs
      - run:
          name: generate docs
          command: mkdocs build --clean
      - run:
          name: install lftp
          command: |
            sudo apt-get update -q --allow-releaseinfo-change
            sudo apt-get install -y lftp
      - run:
          name: deploy docs
          command: lftp sftp://${DEPLOY_DOCS_USER}:${DEPLOY_DOCS_PASS}@${DEPLOY_DOCS_HOST} -e "set ftp:ssl-force true; set ftp:ssl-protect-data true; set ssl:verify-certificate no; set sftp:auto-confirm yes; mirror -v -R ./site ${DEPLOY_DOCS_BASE}/doc/${CIRCLE_BRANCH}; quit"
  deploy-website:
    docker:
      - image: cimg/python:3.13.5
    steps:
      - checkout
      - run:
          name: install lftp
          command: |
            sudo apt-get update -q --allow-releaseinfo-change
            sudo apt-get install -y lftp
      - run:
          name: deploy website
          command: lftp sftp://${DEPLOY_DOCS_USER}:${DEPLOY_DOCS_PASS}@${DEPLOY_DOCS_HOST} -e "set ftp:ssl-force true; set ftp:ssl-protect-data true; set ssl:verify-certificate no; set sftp:auto-confirm yes; mirror -v -R ./www ${DEPLOY_DOCS_BASE}; quit"

  # This job is not currently used, see the commented out build-workflow below.
  build-fedora:
    docker:
      - image: fedora
    parameters:
      backend:
        type: string
        description: 'Database backend to use for the build'
    environment:
      SOCI_CI: true
      SOCI_CI_BACKEND: << parameters.backend >>
      SOCI_SOURCE_DIR: /home/circleci/soci
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            set_env_var() {
              echo "Setting environment variable $1=$2"
              echo $1=$2 >> $BASH_ENV
            }
            set_env_var SOCI_SOURCE_DIR $(pwd)
            env

      - run:
          name: Install dependencies
          command: ./scripts/ci/install.sh
      - run:
          name: Prepare for build
          command: ./scripts/ci/before_build.sh
      - run:
          name: Build
          command: ./scripts/ci/build.sh
      - run:
          name: Test
          command: ./scripts/ci/test.sh

workflows:
  version: 2
  website-workflow:
    jobs:
      - lint-docs:
          filters:
            branches:
              only:
                - master
                - /^release.*/
      - deploy-docs:
          requires:
            - lint-docs
          filters:
            branches:
              only:
                - master
                - /^release.*/
      - deploy-website:
          filters:
            branches:
              only:
                - master

# For some reason pipelines don't work for pull requests on Circle CI (they are
# just never triggered), which makes them useless for us, so comment this out
# for now. If anybody knows how to make this work, please fix it.
#
#  build-workflow:
#    jobs:
#      - build-fedora:
#          matrix:
#            parameters:
#              backend: [ 'postgresql', 'mysql', 'odbc', 'sqlite3' ]
